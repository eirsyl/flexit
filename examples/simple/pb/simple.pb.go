// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simple.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddRequest struct {
	X                    int64    `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    int64    `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{0}
}
func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *AddRequest) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type AddResponse struct {
	Sum                  int64    `protobuf:"varint,1,opt,name=Sum,proto3" json:"Sum,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{1}
}
func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetSum() int64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *AddResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SubtractRequest struct {
	X                    int64    `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	Y                    int64    `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubtractRequest) Reset()         { *m = SubtractRequest{} }
func (m *SubtractRequest) String() string { return proto.CompactTextString(m) }
func (*SubtractRequest) ProtoMessage()    {}
func (*SubtractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{2}
}
func (m *SubtractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtractRequest.Unmarshal(m, b)
}
func (m *SubtractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtractRequest.Marshal(b, m, deterministic)
}
func (m *SubtractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtractRequest.Merge(m, src)
}
func (m *SubtractRequest) XXX_Size() int {
	return xxx_messageInfo_SubtractRequest.Size(m)
}
func (m *SubtractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubtractRequest proto.InternalMessageInfo

func (m *SubtractRequest) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *SubtractRequest) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type SubtractResponse struct {
	Sum                  int64    `protobuf:"varint,1,opt,name=Sum,proto3" json:"Sum,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubtractResponse) Reset()         { *m = SubtractResponse{} }
func (m *SubtractResponse) String() string { return proto.CompactTextString(m) }
func (*SubtractResponse) ProtoMessage()    {}
func (*SubtractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{3}
}
func (m *SubtractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtractResponse.Unmarshal(m, b)
}
func (m *SubtractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtractResponse.Marshal(b, m, deterministic)
}
func (m *SubtractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtractResponse.Merge(m, src)
}
func (m *SubtractResponse) XXX_Size() int {
	return xxx_messageInfo_SubtractResponse.Size(m)
}
func (m *SubtractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubtractResponse proto.InternalMessageInfo

func (m *SubtractResponse) GetSum() int64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *SubtractResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "pb.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "pb.AddResponse")
	proto.RegisterType((*SubtractRequest)(nil), "pb.SubtractRequest")
	proto.RegisterType((*SubtractResponse)(nil), "pb.SubtractResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SimpleClient is the client API for Simple service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimpleClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Subtract(ctx context.Context, in *SubtractRequest, opts ...grpc.CallOption) (*SubtractResponse, error)
}

type simpleClient struct {
	cc *grpc.ClientConn
}

func NewSimpleClient(cc *grpc.ClientConn) SimpleClient {
	return &simpleClient{cc}
}

func (c *simpleClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/pb.Simple/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleClient) Subtract(ctx context.Context, in *SubtractRequest, opts ...grpc.CallOption) (*SubtractResponse, error) {
	out := new(SubtractResponse)
	err := c.cc.Invoke(ctx, "/pb.Simple/Subtract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SimpleServer is the server API for Simple service.
type SimpleServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Subtract(context.Context, *SubtractRequest) (*SubtractResponse, error)
}

func RegisterSimpleServer(s *grpc.Server, srv SimpleServer) {
	s.RegisterService(&_Simple_serviceDesc, srv)
}

func _Simple_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Simple/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Simple_Subtract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubtractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServer).Subtract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Simple/Subtract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServer).Subtract(ctx, req.(*SubtractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Simple_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Simple",
	HandlerType: (*SimpleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Simple_Add_Handler,
		},
		{
			MethodName: "Subtract",
			Handler:    _Simple_Subtract_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "simple.proto",
}

func init() { proto.RegisterFile("simple.proto", fileDescriptor_5ffd045dd4d042c1) }

var fileDescriptor_5ffd045dd4d042c1 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xce, 0xcc, 0x2d,
	0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xd2, 0xe0, 0xe2,
	0x72, 0x4c, 0x49, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0x8c, 0x90,
	0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0x8c, 0x00, 0xf1, 0x22, 0x25, 0x98, 0x20, 0xbc, 0x48,
	0x25, 0x43, 0x2e, 0x6e, 0xb0, 0xca, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x01, 0x2e, 0xe6,
	0xe0, 0xd2, 0x5c, 0xa8, 0x62, 0x10, 0x13, 0x24, 0x92, 0x5a, 0x54, 0x04, 0xd6, 0xc0, 0x19, 0x04,
	0x62, 0x2a, 0xe9, 0x72, 0xf1, 0x07, 0x97, 0x26, 0x95, 0x14, 0x25, 0x26, 0x97, 0x10, 0x63, 0x83,
	0x19, 0x97, 0x00, 0x42, 0x39, 0xf1, 0xd6, 0x18, 0x65, 0x73, 0xb1, 0x05, 0x83, 0xfd, 0x25, 0xa4,
	0xc1, 0xc5, 0xec, 0x98, 0x92, 0x22, 0xc4, 0xa7, 0x57, 0x90, 0xa4, 0x87, 0xf0, 0x96, 0x14, 0x3f,
	0x9c, 0x0f, 0x31, 0x55, 0x89, 0x41, 0xc8, 0x9c, 0x8b, 0x03, 0x66, 0x97, 0x90, 0x30, 0x48, 0x1a,
	0xcd, 0xa1, 0x52, 0x22, 0xa8, 0x82, 0x30, 0x8d, 0x49, 0x6c, 0xe0, 0xb0, 0x33, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x75, 0xe1, 0x12, 0x55, 0x4b, 0x01, 0x00, 0x00,
}
